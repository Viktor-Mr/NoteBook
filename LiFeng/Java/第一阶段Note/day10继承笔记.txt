代码块：
	  在Java中，使用{}括起来的代码被称为代码块，根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程讲解)。
	局部代码块 
		在方法中出现；限定变量生命周期，及早释放，提高内存利用率
	构造代码块 
		在类中方法外出现；多个构造方法方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行
		作用:可以把构造方法中相同的代码提取出来，对对象进行初始化
	静态代码块 在类中方法外出现，加了static修饰
		在类中方法外出现，并加上static修饰；用于给类进行初始化，在加载的时候就执行，并且值执行一次。
		作用:一般用于类的初始化
	
	面试:
		请简述静态代码块，构造代码块，构造方法的执行属性以及特点?
		顺序:静态代码块 > 构造代码块 > 构造方法
		静态代码块:只执行一次
		构造代码块:每次构造方法都要执行一次
		
继承概述:
		把多个类中，相同的代码提取一个单独的类当中
	如何实现继承?
		JAVA提供了一个关键字：extends
	格式:
		class 子类名 extends 父类名{}

	好处:
		a.节省了代码量
		b.提高了代码的复用性
		c.提高代码的可维护性
		d.提高类与类之间的联系，这个也是实现多态前提
		
	类与类之间产生了关系，其实也是我们继承一个弊端
		类的耦合性增强了
		
		开发原则:高内聚 低耦合
		耦合:类与类的关系
		内聚:自己能够完成某件事的能力
		
		
继承的特点:
		a.java只支持单根继承，不支持多继承
			有些语言是支持多继承，格式 字类 extends 类1,类2...
		b.java是支持多层继承的(继承体系)
			a extends b;
			c extends a;
			d extends c;
			
继承的注意事项:
 		A.子类只能继承父类非私有的成员(成员变量和成员方法)
 		B.子类不能继承父类的构造方法，但是可以通过super(可能等下来讲)来访问父类的构造方法
 		C.不要为了部分功能而去继承
 			class A{
 				public void show1(){}
 				public void show2(){}
 			}
 			class B{
 				public void show2(){}
 				public void show3(){}
 			}
 			通过class B我们发现其实class A也有用样的show2的方法，所以就用继承来体现
 			class B extends class A{
 				public void show1(){}

 			}
 			
 			这样其实不好，因为你不但有了show1还有了多show2.
 			可能这个show1不是想要的。
 			那么，我们怎么去更好实现继承体系
 			其实继承体系有一种关系"is a"
 			Person
 				Student
 				Teacher
 			水果
 				苹果
 				香蕉
 				橘子
				
类的组成:
		成员变量:
		成员方法:
		构造方法:
	而我们现在讲的是继承，所以我们需要考虑下类的组成部分和各自之间的关系

	继承中的成员变量的关系:
		a.子类中的成员变量和父类中的成员变量名称不一样的,很简单的东西不讲
		b.子类中的成员变量和父类中的成员变量一样的。怎么讲呢?
			在子类中访问的查找变量的顺序是有不同的。
				a.在子类当中的局部方法做查找，有用
				b.在子类中的成员方法做查找，没有用
				c.在子类的成员范围内查找，有用
				d.如果还找不到 直接报错
				
this跟super的区别?
 		分别是代表什么?
 			this代表的是本类对象引用
 			super代表的是所存储空间的一个标识(可以理解为是父类的引用，通过这个可以访问我们父类的成员)
 	
 	怎么调用？
 		a.调用成员变量
 			this.成员变量 调用本类的成员变量
 			super.成员变量 调用父类的成员变量
 		b.调用构造方法
 			this(..) 调用本类的构造方法
 			super(..) 调用父类的构造方法
			必须放在子类构造方法中的第一句
 		c.调用成员方法
 			this.成员方法 调用本类的成员方法
 			super.成员方法 调用父类的成员方法
			
			
子类中所有的构造方法默认都会访问父类中无参数的构造方法,除非super去显式调用父类其他的带参的构造方法

为什么呢?
	因为子类会继承父类中的数据，可能还会使用父类的数据。所以，子类初始化之前，一定要先完成父类数据的初始化。
	每一个构造方法的第一条语句默认都是：super()

	
如何父类中没有构造方法，该怎么办呢?那么子类中的构造方法会出现什么问题?
 		报错
如何解决?
	a.子类通过super去显示调用父类其他的带参的构造方法
	b.子类通过this去调用本类的其他构造方法
	c.本类其他构造也必须首先访问了父类构造
	
继承成员方法的关系:
		a.子类中方法和父类中方法的方法声明不一样
		b.子类中方法和父类中方法的方法声明一样,怎么办？
			通过子类对象调用方法:
				a.先找到子类，看有没有这个方法，有就使用
				b.在看父类，看有没有这个方法 有就使用
				c.如果父类也没有 报错
				
方法的重写:子类出现了和父类一模一样的方法,子类的方法代码不同
 	
 	方法重载:
 		本类中出现方法名称相同，参数列表不同，与返回值无关
 		
 	子类对象调用方法的时候:
 		先找子类，再去找父类
 		
方法重写:
 		当子类需要父类功能的时候，而我自己主体子类又有这些内容，但是父类的某些方法又不能完成我目前需要的功能，那么
 		这个时候我就可以重写父类的方法
 		这样既沿袭了父类的功能，又能自定义我子类的功能。