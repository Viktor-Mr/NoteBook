1.运算符
	1.算数运算符
		a：+ - * / % ++ -- 
		b.+的用法
			a.加法
			b.正号
			c.字符串的连接
		c./和%的区别
			数据做除法的时候/取得是商，%取得是余数
		d.++和--
				单独使用:
			放在操作数的前面和后面效果一致(这种做法也是我们比较常见的)

		参与运算使用:
			放在操作的数前面，先自增或者自减，然后再去参与运算。
			放在操作数的后面，先参与运算，再去自增或者自减。
	2.赋值运算符
		基本赋值运算符: =
 			把右边的数据赋值给左边
			int a = 10;
			也就是把10的值赋值给a
 		扩展赋值运算符:+=、-=、*=、/=、%= 
 			+=把左边和右边的数据做加法，再赋值给左边
	3.比较运算符
			==、!=、<、>、<=、>=
			特点:
				无论你的操作是复杂还是简单，他返回的结果永远只有boolean类型
			注意:
				特别是新手，千万不要把"==" 写成 "="
	4.逻辑运算符:
		&,|,^,!
		&&,||(是我们经常使用的)
		特点:
			逻辑运算符一般只用于连接boolean类型表达式或者值。

			表达式:就是用运算符把常量或者变量连接起来符号JAVA语法的式子。
				算数表达式:a + b;
				比较表达式:a == b;
		结论:
			逻辑与&:其中只要有一个是false，那么结果就是false
			逻辑或|:只要其中有一个为true,那么结果就是true
			异或^:相同的为false,不同的就为true
				举例 情侣关系:男男 = fasle ,男女 = true,女女 = fasle
			!逻辑非:非fasle则true，非true则false 也就是取反
				特点:如果非的数量是偶数，则不改变本身
				
		&&和单&的区别？同理 短路||跟单|的区别?
			A:他们最终返回的结果都是一样的
			B:&&具备短路效果,左边是false的话，右边就不会继续执行,直接返回false


			C:||具备短路效果,左边的是true，右边的不再执行,直接返回true

				
			开发中常用的:
				&& / || / !
	5.三目运算符
		单目运算符:~3
		双目运算符:3 + 4
		三目运算符:
			格式:比较表达式 ? 表达式1 : 表达式2;

			比较表达式返回的结果只能是true或者fasle
			注意:表达式1或者2的值，必须和所接收的数据类型一一致
			执行流程:
				1.根据比较表达式返回的结果，计算返回的是true还是false
				2.如果返回的是true就执行表达式1
				3.如果返回的是false就执行表达式2
	6.键盘录入
		为了使我们的程序的数据更加贴合实际开发的数据，我们需要提高程序数据的灵活性
	所以我们需要使用到键盘录入

	那么,键盘录入是如何实现的?
	格式:
		A:导包
			格式:
				import java.util.Scanner;
			位置:
				在class上面
		B:创建键盘录入对象(扫描器)
			格式:
				Scanner sc = new Scanner(System.in);
			位置:
				不固定，只需要在你使用他之前定义好就可以了
		C:通过键盘对象，获取用户录入的数据
			格式:
				int num = sc.nextInt();

			